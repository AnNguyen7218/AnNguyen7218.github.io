{"version":3,"sources":["pages/General/loading.js","components/round.js","pages/Home/home.js","components/PDF_viewer.js","pages/CV/index.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync","assests/ava.jpg","assests/cv.pdf"],"names":["Loading","react_default","a","createElement","class","src","alt","React","Component","Round","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","img","size","redirect","onClickRedirect","bind","assertThisInitialized","window","location","href","x","className","style","background","width","height","backgroundSize","onClick","Home","round_Round","ava","pdfjs","GlobalWorkerOptions","workerSrc","PDF_viewer","file","entry","pageNumber","MyCV","PDF_viewer_PDF_viewer","App","BrowserRouter","react","fallback","Switch","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","__webpack_require__","p"],"mappings":"wPAEqBA,mLAEjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iBACTH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,uBAAuBC,IAAI,aAJPC,IAAMC,oCCAtBC,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,IAAMT,EAAMS,IACZC,KAAMV,EAAMU,KACZC,SAAWX,EAAMW,UAGnBV,EAAKW,gBAAkBX,EAAKW,gBAAgBC,KAArBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KARNA,iFAYjBc,OAAOC,SAASC,KAAOb,KAAKI,MAAMG,0CAIlC,IAAIO,EAAId,KACR,OACEb,EAAAC,EAAAC,cAAA,OACE0B,UAAY,WACZC,MAAS,CAACC,WAAY,OAASH,EAAEV,MAAMC,IAAM,qBACnCa,MAAOJ,EAAEV,MAAME,KAAKY,MACpBC,OAAQL,EAAEV,MAAME,KAAKa,OACrBC,eAAe,SACzBC,QAAWP,EAAEN,yBAzBcf,IAAMC,WCIpB4B,mLAEjB,OACEnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkC,EAAD,CACIlB,IAAOmB,IACPlB,KAAQ,CAACY,MAAO,QAASC,OAAQ,SACjCZ,SAAY,gBAPUd,IAAMC,oCCHxC+B,QAAMC,oBAAoBC,UAAY,oEAGjBC,cACnB,SAAAA,EAAYhC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,IACjB/B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8B,GAAAzB,KAAAH,KAAMJ,KACDQ,MAAQ,CACXyB,KAAOjC,EAAMiC,MAHEhC,wEAQjB,OACEV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyC,EAAA,SAAD,CACED,KAAOA,KAET1C,EAAAC,EAAAC,cAACyC,EAAA,KAAD,CAAMC,WAAY,aAdctC,IAAMC,WCFzBsC,mLAEjB,OACE7C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4C,EAAD,CACEJ,KAAQ,iCALgBpC,IAAMC,WC0BzBwC,kMAlBX,OACE/C,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,OACb5B,EAAAC,EAAAC,cAAA,UAAQ0B,UAAU,cAChB5B,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,KACEhD,EAAAC,EAAAC,cAAC+C,EAAA,SAAD,CAAUC,SAAUnD,GAClBC,EAAAC,EAAAC,cAACiD,EAAA,EAAD,KACEnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpB,IACjCnC,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,MAAMC,UAAWV,gBATjCtC,cCEEiD,QACW,cAA7BhC,OAAOC,SAASgC,UAEe,UAA7BjC,OAAOC,SAASgC,UAEhBjC,OAAOC,SAASgC,SAASC,MACvB,2DCZNC,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iCEnInB,SAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAC,MAAA,uBAAAF,EAAA,KAEA,MADAC,EAAAE,KAAA,mBACAF,EAEAF,EAAAK,KAAA,WAAuC,UACvCL,EAAAM,QAAAN,EACAO,EAAAC,QAAAR,EACAA,EAAAS,GAAA,uBCRAF,EAAAC,QAAiBE,EAAAC,EAAuB,oDCAxCJ,EAAAC,QAAiBE,EAAAC,EAAuB","file":"static/js/main.4169e416.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Loading extends React.Component {\n  render() {\n    return (\n      <div class=\"modal-loading\">\n        <img src=\"images/icon-lock.svg\" alt=\"\"/>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default class Round extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      img : props.img,\n      size: props.size,\n      redirect : props.redirect\n    }\n\n    this.onClickRedirect = this.onClickRedirect.bind(this)\n  }\n  \n  onClickRedirect () {\n    window.location.href = this.state.redirect\n  }\n\n  render() {\n    let x = this\n    return (\n      <div \n        className = 'roundBtn' \n        style = {{background: 'url(' + x.state.img + ') center no-repeat', \n                  width: x.state.size.width,\n                  height: x.state.size.height, \n                  backgroundSize:'cover'}}\n        onClick = {x.onClickRedirect}\n      >\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nimport ava from '../../assests/ava.jpg';\n\nimport Round from '../../components/round'\n\nexport default class Home extends React.Component {\n  render() {\n    return (\n      <div>\n        <Round \n            img = {ava} \n            size = {{width: '200px', height: '200px'}}\n            redirect = {'/cv'}\n          />\n      </div>\n    );\n  }\n}","import React from 'react'\nimport {Document, Page, pdfjs } from 'react-pdf';\nimport file from '../assests/cv.pdf'\npdfjs.GlobalWorkerOptions.workerSrc = '//cdnjs.cloudflare.com/ajax/libs/pdf.js/2.0.943/pdf.worker.js';\n\n\nexport default class PDF_viewer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      file : props.file\n    }\n  }\n  render() {\n    let x = this\n    return (\n      <div>\n        <Document \n          file= {file}\n        >\n        <Page pageNumber={1} />\n        </Document>\n      </div>\n    );\n  }\n}","import React from 'react'\n\nimport PDFViewer from '../../components/PDF_viewer'\n\nexport default class MyCV extends React.Component {\n  render() {\n    return (\n      <div>\n        <PDFViewer\n          file = {'../../assests/cv.pdf'}\n        />\n      </div>\n    );\n  }\n}","import React, { Component, Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Loading from './pages/General/loading'\nimport Home from './pages/Home/home.js';\nimport MyCV from './pages/CV/index.js'\n\nimport './App.css';\nimport './styles/styles.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Router>\n            <Suspense fallback={Loading}>\n              <Switch>\n                <Route exact path=\"/\" component={Home}/>\n                <Route exact path=\"/cv\" component={MyCV}/>\n\n              </Switch>\n            </Suspense>\n          </Router>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 29;","module.exports = __webpack_public_path__ + \"static/media/ava.e661db49.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cv.2de9b377.pdf\";"],"sourceRoot":""}